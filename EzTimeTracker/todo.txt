// http://stackoverflow.com/questions/4459058/alarm-manager-example

	// Here's a fairly self-contained example. It turns a button red after 5sec.

	public void SetAlarm()
    {
        final Button button = buttons[2]; // replace with a button from your own UI
        BroadcastReceiver receiver = new BroadcastReceiver() {
            @Override public void onReceive( Context context, Intent _ )
            {
                button.setBackgroundColor( Color.RED );
                context.unregisterReceiver( this ); // this == BroadcastReceiver, not Activity
            }
        };

        this.registerReceiver( receiver, new IntentFilter("com.blah.blah.somemessage") );

        PendingIntent pintent = PendingIntent.getBroadcast( this, 0, new Intent("com.blah.blah.somemessage"), 0 );
        AlarmManager manager = (AlarmManager)(this.getSystemService( Context.ALARM_SERVICE ));

        // set alarm to fire 5 sec (1000*5) from now (SystemClock.elapsedRealtime())
        manager.set( AlarmManager.ELAPSED_REALTIME_WAKEUP, SystemClock.elapsedRealtime() + 1000*5, pintent );
    }

// http://stackoverflow.com/questions/22015242/unable-to-cancel-the-alarm-from-alarmmanager

		// Alarm should be created and cancelled on Same Pending intent.
		public class AlarmNotifReceiver extends BroadcastReceiver {

			PendingIntent pi;
			AlarmManager am;
			Intent i;

			@Override
			public void onReceive(Context context, Intent intent) {
				pi = PendingIntent.getBroadcast(context, 0, i, 0);
				am = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
				i = new Intent(context, AlarmNotifReceiver.class);
				//things
			}

			public void SetAlarm(Context context) {

				am.setRepeating(AlarmManager.RTC_WAKEUP, System.currentTimeMillis(), 10 * 1000, pi);
			}

			public void CancelAlarm(Context context) {
				am.cancel(pi);
			}


		}


##########################

>	Neuer Export As
	- layout
	- filter
	- export-plugin generates csv, html,... text
		csv from timeslice
options
	chooser
		no backup
		local backup
		public backup

	onLocal/public-db change: move database
	
	on create db add-testtimeslices (aus git-log?)

	new profile to group categories as filter
	report with checkmark: checked=active tracking ?
	punchInOut with button: report or list-view
	
v SummaryReportExport mit bemerkungen

Filter/Gui+=Profile<-ProfilCategory->Category

list-punchInOutView 
	
filecopy aus http://stackoverflow.com/questions/23083078/import-sqlite-database-into-device-programmatically

#############

try {
            backupDatabase();
        } catch (IOException e1) {
            // TODO Auto-generated catch block
            e1.printStackTrace();
        }


public static void backupDatabase() throws IOException {
        //Open your local db as the input stream
        String inFileName = "/data/data/com.myapp.main/databases/Content";
        File dbFile = new File(inFileName);
        FileInputStream fis = new FileInputStream(dbFile);

        String outFileName = Environment.getExternalStorageDirectory()+"/Content";
        //Open the empty db as the output stream
        OutputStream output = new FileOutputStream(outFileName);
        //transfer bytes from the inputfile to the outputfile
        byte[] buffer = new byte[1024];
        int length;
        while ((length = fis.read(buffer))>0){
            output.write(buffer, 0, length);
        }
        //Close the streams
        output.flush();
        output.close();
        fis.close();
    }
	
##############

File f=new File("/data/data/com.example.sql/databases/DBNAME");
                    FileInputStream fis=null;
                    FileOutputStream fos=null;

                    try
                    {
                      fis=new FileInputStream(f);
                      fos=new FileOutputStream("/mnt/sdcard/DB/database");
                      while(true)
                      {
                        int i=fis.read();
                        if(i!=-1)
                        {fos.write(i);}
                        else
                        {break;}
                      }
                      fos.flush();
                      Toast.makeText(this, "DB dump OK", Toast.LENGTH_LONG).show();
                    }
                    catch(Exception e)
                    {
                      e.printStackTrace();
                      Toast.makeText(this, "DB dump ERROR", Toast.LENGTH_LONG).show();
                    }
                    finally
                    {
                      try
                      {
                        fos.close();
                        fis.close();
                      }
                      catch(Exception ioe)
                      {}
                    }